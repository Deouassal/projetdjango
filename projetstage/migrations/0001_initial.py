# Generated by Django 4.2.1 on 2023-05-29 16:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import projetstage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='administrateur',
            fields=[
                ('id_administrateur', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
                ('prénom', models.CharField(max_length=50)),
                ('adresse_email', models.EmailField(max_length=254, unique=True)),
                ('numero_telephone', models.CharField(max_length=20, validators=[django.core.validators.MinValueValidator(8, 'Le numéro de téléphone doit avoir au moins %(limit_value)s chiffres.')])),
                ('mot_de_passe', models.CharField(max_length=128, validators=[django.core.validators.RegexValidator(message='Le mot de passe doit contenir au moins 8 caractères, y compris des lettres majuscules et minuscules, des chiffres et des caractères spéciaux.', regex='^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$')])),
                ('autorisations', models.TextField(max_length=50)),
            ],
            options={
                'db_table': 'administrateur',
            },
        ),
        migrations.CreateModel(
            name='Affectations',
            fields=[
                ('id_affectation', models.AutoField(primary_key=True, serialize=False)),
                ('date_affectation', models.DateField()),
                ('date_retour', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id_commande', models.AutoField(primary_key=True, serialize=False)),
                ('date_commande', models.DateField()),
                ('articles_commandes', models.CharField(max_length=50)),
                ('quantite_commandee', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('statut_commande', models.CharField(max_length=50)),
                ('date_livraison_prevue', models.DateField()),
                ('date_livraison_reelle', models.DateField(null=True)),
            ],
            options={
                'db_table': 'Commande',
            },
        ),
        migrations.CreateModel(
            name='Consommables',
            fields=[
                ('id_consommable', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50, null=True)),
                ('quantite', models.IntegerField()),
            ],
            options={
                'db_table': 'Consommables',
            },
        ),
        migrations.CreateModel(
            name='Demandes',
            fields=[
                ('id_demande', models.AutoField(primary_key=True, serialize=False)),
                ('description_demande', models.TextField(validators=[projetstage.models.validate_description])),
                ('type_demande', models.CharField(choices=[('Maintenance', 'Maintenance'), ('Équipements', 'Équipements'), ('Consommables', 'Consommables'), ('Matérielsinformatiques', 'Matérielsinformatiques')], max_length=50)),
                ('date_demande', models.DateField(auto_now_add=True)),
                ('état_demande', models.CharField(choices=[('En attente', 'En attente'), ('En cours', 'En cours'), ('Terminée', 'Terminée')], max_length=20)),
                ('coût_reparation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'Demandes',
            },
        ),
        migrations.CreateModel(
            name='Equipements',
            fields=[
                ('id_equipement', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
                ('numero_serie', models.CharField(max_length=50)),
                ('date_achat', models.DateField(null=True)),
                ('date_debut_garantie', models.DateField(null=True)),
                ('date_fin_garantie', models.DateField(null=True)),
                ('statut', models.CharField(max_length=50)),
                ('emplacement_actuel', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'Equipements',
            },
        ),
        migrations.CreateModel(
            name='Fournisseurs',
            fields=[
                ('id_fournisseur', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('localisation', models.CharField(max_length=50)),
                ('telephone', models.CharField(max_length=20, validators=[django.core.validators.MinValueValidator(8, 'Le numéro de téléphone doit avoir au moins %(limit_value)s chiffres.')])),
                ('adresse_email', models.EmailField(max_length=255, unique=True)),
                ('site_web', models.URLField(null=True)),
                ('type_fournisseur', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateurs',
            fields=[
                ('id_utilisateur', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('adresse_email', models.EmailField(max_length=254, unique=True)),
                ('numero_telephone', models.CharField(max_length=20, validators=[django.core.validators.MinValueValidator(8, 'Le numéro de téléphone doit avoir au moins %(limit_value)s chiffres.')])),
                ('mot_de_passe', models.CharField(max_length=128, validators=[django.core.validators.RegexValidator(message='Le mot de passe doit contenir au moins 8 caractères, y compris des lettres majuscules et minuscules, des chiffres et des caractères spéciaux.', regex='^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$')])),
                ('service', models.CharField(max_length=50)),
                ('poste', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='Materiels_Informatiques',
            fields=[
                ('id_materiel_informatique', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('numero_serie', models.CharField(max_length=50)),
                ('date_achat', models.DateField(null=True)),
                ('date_debut_garantie', models.DateField(null=True)),
                ('date_fin_garantie', models.DateField(null=True)),
                ('id_fournisseur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.fournisseurs')),
                ('id_utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.utilisateurs')),
            ],
            options={
                'db_table': 'materiels_informatiques',
            },
        ),
        migrations.AddConstraint(
            model_name='fournisseurs',
            constraint=models.UniqueConstraint(fields=('adresse_email',), name='unique_adresse_email'),
        ),
        migrations.AddConstraint(
            model_name='fournisseurs',
            constraint=models.CheckConstraint(check=models.Q(('site_web__regex', '^https?://\\S+$')), name='site_web_valide'),
        ),
        migrations.AddField(
            model_name='equipements',
            name='id_fournisseur',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.fournisseurs'),
        ),
        migrations.AddField(
            model_name='equipements',
            name='id_utilisateur',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.utilisateurs'),
        ),
        migrations.AddField(
            model_name='demandes',
            name='id_consommable',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.consommables'),
        ),
        migrations.AddField(
            model_name='demandes',
            name='id_materiel_informatique',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.materiels_informatiques'),
        ),
        migrations.AddField(
            model_name='demandes',
            name='id_utilisateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projetstage.utilisateurs'),
        ),
        migrations.AddField(
            model_name='demandes',
            name='id_équipement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.equipements'),
        ),
        migrations.AddField(
            model_name='consommables',
            name='id_fournisseur',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.fournisseurs'),
        ),
        migrations.AddField(
            model_name='consommables',
            name='id_utilisateur',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.utilisateurs'),
        ),
        migrations.AddField(
            model_name='commande',
            name='id_consommable',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.consommables'),
        ),
        migrations.AddField(
            model_name='commande',
            name='id_equipement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.equipements'),
        ),
        migrations.AddField(
            model_name='commande',
            name='id_fournisseur',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.fournisseurs'),
        ),
        migrations.AddField(
            model_name='commande',
            name='id_materiel_informatique',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.materiels_informatiques'),
        ),
        migrations.AddField(
            model_name='affectations',
            name='id_consommable',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.consommables'),
        ),
        migrations.AddField(
            model_name='affectations',
            name='id_equipement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.equipements'),
        ),
        migrations.AddField(
            model_name='affectations',
            name='id_materiel_informatique',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.materiels_informatiques'),
        ),
        migrations.AddField(
            model_name='affectations',
            name='id_utilisateur',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='projetstage.utilisateurs'),
        ),
        migrations.AddConstraint(
            model_name='materiels_informatiques',
            constraint=models.CheckConstraint(check=models.Q(('date_achat__lte', models.F('date_debut_garantie'))), name='date_achat_inf_date_debut_garantie'),
        ),
        migrations.AddConstraint(
            model_name='materiels_informatiques',
            constraint=models.CheckConstraint(check=models.Q(('date_debut_garantie__lte', models.F('date_fin_garantie'))), name='date_debut_garantie_inf_date_fin_garantie'),
        ),
        migrations.AddConstraint(
            model_name='equipements',
            constraint=models.CheckConstraint(check=models.Q(('statut__in', ['En stock', 'En service', 'Hors service'])), name='statut_disponible'),
        ),
        migrations.AddConstraint(
            model_name='equipements',
            constraint=models.UniqueConstraint(fields=('nom', 'numero_serie'), name='unique_equipement'),
        ),
        migrations.AddConstraint(
            model_name='demandes',
            constraint=models.CheckConstraint(check=models.Q(('coût_reparation__gte', 0)), name='coût_reparation_positif'),
        ),
        migrations.AddConstraint(
            model_name='consommables',
            constraint=models.CheckConstraint(check=models.Q(('quantite__gte', 0)), name='quantite_positive'),
        ),
        migrations.AddConstraint(
            model_name='commande',
            constraint=models.CheckConstraint(check=models.Q(('date_livraison_prevue__gte', models.F('date_commande'))), name='date_livraison_prevue_posterieure_ou_egale'),
        ),
        migrations.AddConstraint(
            model_name='commande',
            constraint=models.CheckConstraint(check=models.Q(('quantite_commandee__gt', 0)), name='quantite_commandee_positive'),
        ),
        migrations.AddConstraint(
            model_name='commande',
            constraint=models.CheckConstraint(check=models.Q(('date_livraison_reelle__gte', models.F('date_livraison_prevue'))), name='date_livraison_reelle_posterieure_ou_egale'),
        ),
        migrations.AddConstraint(
            model_name='commande',
            constraint=models.UniqueConstraint(fields=('id_equipement', 'id_consommable', 'id_materiel_informatique'), name='unique_article_commande'),
        ),
        migrations.AddConstraint(
            model_name='affectations',
            constraint=models.CheckConstraint(check=models.Q(('date_retour__gte', models.F('date_affectation'))), name='date_retour_posterieure_ou_egale'),
        ),
    ]
